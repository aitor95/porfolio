---
import { ViewTransitions } from "astro:transitions";
import Background from "@components/elements/Background.astro";
import "@fontsource-variable/onest";
import Navigation from "@components/Navigation.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="description"
			content="Aitor Blesa es un desarrollador de software que crea productos y experiencias accesibles y usables para la web."
		/>
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta
			name="description"
			content="Aitor Blesa es un desarrollador de software que crea productos y experiencias accesibles y usables para la web."
		/>
		<title>{title}</title>
		<meta property="og:locale" content="es_ES" />
		<meta
			property="og:description"
			content="Aitor Blesa es un desarrollador de software que crea productos y experiencias accesibles y usables para la web."
		/>
		<meta property="og:site_name" content=`${title}` />
		<meta property="og:type" content="website" />
		<meta property="og:url" content="aitorblesa.com" />
		<ViewTransitions />
	</head>
	<body id="home" class="relative text-content min-h-screen">
		<Background />
		<Navigation />

		<slot />
		<style is:global>
			:root {
				color-scheme: light dark;
				--color-accent-light: 78 76 168;
				--color-accent-dark: 34 197 94;
				--color-accent: var(--color-accent-light);
				--color-content-light: 17 17 17;
				--color-content-dark: 209 213 219;
				--color-content: var(--color-content-light);
				--color-dropdown-light: 209 213 219;
				--color-dropdown-dark: 73 79 114;
				--color-dropdown: var(--color-dropdown-light);
			}

			html {
				font-family:
					"Onest Variable",
					system-ui,
					-apple-system,
					BlinkMacSystemFont,
					"Segoe UI",
					Roboto,
					Oxygen,
					Ubuntu,
					Cantarell,
					"Open Sans",
					"Helvetica Neue",
					sans-serif;
				scroll-behavior: smooth;
			}

			body {
				color: var(--color-content);
				display: grid;
				grid-template-columns: auto;
				min-height: 100vh;
				overscroll-behavior: none;
			}

			@media (prefers-color-scheme: dark) {
				.dark {
					--color-content: var(--color-content-dark);
					--color-accent: var(--color-accent-dark);
					--color-dropdown: var(--color-dropdown-dark);
				}

				.body {
					color: var(--color-accent-dark);
				}
			}

			@media (prefers-reduced-motion: reduce) {
				html {
					scroll-behavior: auto;
				}
			}
			svg {
				transition: all ease-in-out 150ms;
			}
		</style>

		<script>
			const mybutton = document.querySelector(".button");
			const scrollFunction = () => {
				if (
					document.body.scrollTop > 100 ||
					document.documentElement.scrollTop > 100
				) {
					mybutton?.classList.remove("hidden");
				} else {
					mybutton?.classList.add("hidden");
				}
			};
			const backToTop = () => {
				window.scrollTo({ top: 0, behavior: "smooth" });
			};

			window.addEventListener("scroll", scrollFunction);
		</script>
	</body>
</html>
